# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- azure-pipelines

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Xmx4096m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dhttp.keepAlive=false -DskipTests -DskipIntegrationTests'

jobs:
- job: Build
  timeoutInMinutes: 0

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: Docker@1
    displayName: Container registry login
    inputs:
      command: login
      dockerRegistryEndpoint: camino.azurecr.io
      containerRegistryType: Container Registry

  - task: Cache@2
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(MAVEN_CACHE_FOLDER)
    displayName: Cache Maven local repo

  - script: |
      chmod -R o+rwx .
      sudo chown -R 1000:1000 .
    displayName: Chmod / Chown

  - task: Maven@3
    inputs:
      jdkVersionOption: '1.11'
      mavenPomFile: 'pom.xml'
      mavenOptions: '$(MAVEN_OPTS)'

  - script: |
      cd dockerfiles/che
      ./build.sh --build-arg:CHE_DASHBOARD_ORGANIZATION=camino.azurecr.io/camino
    displayName: Building the image

  - script: |
      docker tag quay.io/eclipse/che-server:nightly camino.azurecr.io/eclipse/che-server:nightly
      docker tag quay.io/eclipse/che-server:nightly camino.azurecr.io/eclipse/che-server:$(build.buildId)
    displayName: Tagging

  - script: |
      docker push camino.azurecr.io/eclipse/che-server:$(build.buildId)
    displayName: Pushing tagged buildId

  - script: |
      docker push camino.azurecr.io/eclipse/che-server:nightly
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    displayName: Pushing nightly

